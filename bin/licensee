#!/usr/bin/env ruby

require_relative '../lib/licensee'

path = ARGV[0] || Dir.pwd

def format_percent(float)
  "#{format('%.2f', float)}%"
end

project = Licensee.project(path, detect_packages: true, detect_readme: true)

if project.license
  puts "License: #{project.license.name}"
elsif project.licenses
  puts "Licenses: #{project.licenses.map(&:name)}"
else
  puts "License: Not detected"
end

puts "Matched files: #{project.matched_files.map(&:filename)}"

project.matched_files.each do |matched_file|
  puts "#{matched_file.filename}:"
  puts "  Content Hash: #{matched_file.content_hash}" if matched_file.respond_to?(:content_hash)
  puts "  Attribution: #{matched_file.attribution}" if matched_file.respond_to?(:attribution)
  puts "  License: #{matched_file.license.name}" if matched_file.license
  puts "  Confidence: #{format_percent(matched_file.confidence)}"
  puts "  Method: #{matched_file.matcher.class}" if matched_file.matcher

  if matched_file.is_a?(Licensee::Project::LicenseFile) && matched_file.confidence != 100
    matcher = Licensee::Matchers::Dice.new(matched_file)
    licenses = matcher.licenses_by_similiarity
    unless licenses.empty?
      puts "  Closest licenses:"
      licenses[0...3].each do |license, similarity|
        spdx_id = license.meta['spdx-id']
        puts "    * #{spdx_id} similarity: #{format_percent(similarity)}"
      end
    end
  end
end

exit !project.licenses.empty?
